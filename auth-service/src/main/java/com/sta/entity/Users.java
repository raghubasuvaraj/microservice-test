package com.sta.entity;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;
import javax.validation.constraints.NotBlank;

import org.hibernate.annotations.GenericGenerator;

import com.sta.utilities.AuthConstants;

import lombok.Getter;
import lombok.Setter;
import lombok.ToString;

/**
 * This persistence layer is only for demo purpose once the registration is
 * confirmed this layer will be terminate.
 * <p>
 * The @Id should not be in this entity layer it must be in an abstracter class,
 * because @Id a common column in each entities. This will remove after the demo.
 * 
 * @author r@ghu
 *
 */
@Getter
@Setter
@ToString
@Entity
@Table(name = "users", uniqueConstraints = { @UniqueConstraint(columnNames = { "mobile", "email" }) })
public class Users {

	@Id
	@GeneratedValue(generator = "uuid")
	@GenericGenerator(name = "uuid", strategy = "uuid")
	@Column(columnDefinition = "CHAR(32)", unique = true)
	private String id;

	@NotBlank(message = AuthConstants.MANDATORY)
	@Column(name = "name", nullable = false)
	private String name;

	@NotBlank(message = AuthConstants.MANDATORY)
	@Column(name = "email", unique = true, nullable = false)
	private String email;

	@NotBlank(message = AuthConstants.MANDATORY)
	@Column(name = "mobile", unique = true, nullable = false)
	private String mobile;

	/**
	 * This id generated by keycloak itself
	 */
	@Column(name = "keycloak_user_id")
	private String keycloakUserId;

}
